/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  8
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "constant";
    object      picProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

//Note: One can type in an invalid model name to get a list of all defined models at runtime!

SolverSettings
{
    typeIdList                      (Ne Ar);//Defined species
    fieldCalculation                ();
    ChargeDistribution              CellAverage;//Model for weighting the charge to the mesh
    FieldWeigthing                  CellAverage;//Model for weighting the electric field to the parcel

    spaceCharge                     0;//[As] space charge to be uniformly distributed

    checkDebyeLength                false;//Print a message if the cell is larger than the Debye length
    checkPlasmaFrequency            false;//Print a message if the time step is larger than the plasma frequency

    warnCellTrajectory              0.5;//Warn once every time step if a particle moves further than x of the cell length (there may even be faster particles)
}

Diagnostics
{
    modelList (Temperature);//Select these Diagnostic models
}


moleculeProperties//Properties of all species defined via SolverSettings/typeIdList
{
    Ne
    {
        mass                            3.375350746e-26;
        diameter                        3.08e-10;
        omega                           1;//viscosity index (used only by the VariableHardSphere model)
        charge                          0;
        solveMovement                   true;//Whether the parcel should move or stay stationary
        nEquivalentParticles            200;//Number of real particles included in the parcel
    }
    Ar
    {
        mass                            6.681789475e-26;
        diameter                        3.76e-10;
        omega                           1;
        charge                          0;
        solveMovement                   true;
        nEquivalentParticles            400;
    }

    SpeciesRelations//Relations between species. Required for the collision algorithms among others
    {
        electronTypeId none;
        species1
        {
            neutralTypeId Ar;
            ionTypeId none;
        }
        species2
        {
            neutralTypeId Ne;
            ionTypeId none;
        }
    }
}


// BoundaryModels
// ~~~~~~~~~~~~~~~
BoundaryModels
{
    //Reflection model for boundaries of type wall (see: constant/polyMesh/boundary)
    WallReflectionModel SpecularReflection;

    //List of PatchEvent models
    PatchEventModels
    {
        modelList ();
    }

    //Boundary models have to be defined for patches
    PatchBoundaryModels
    {
        modelList ();

    }
    
}


// MaxwellSolver
// ~~~~~~~~~~~~~~~~~~~~~
MaxwellSolver                  none;

// ParticlePusher
// ~~~~~~~~~~~~~~~~~~~~~
ParticlePusher                 Boris;

// CollisionModels
// ~~~~~~~~~~~~~~~~~~~~~
CollisionModels
{
    BackgroundGasModel              none;
    ElectronNeutralCollisionModel   none;
    IonNeutralCollisionModel        none;

    BinaryCollisionModel            IsotropicScattering;//Binary collision model
    IsotropicScatteringCoeffs
    {
        WeightCorrection            Nanbu;//Correction model for simulation with unequal parcel weight
        TotalCrossSectionModel      HardSphere;//Cross section
        handleChargeExchange        false;//Whether to use the simple model proposed by Nanbu for charge exchange collisions or not
    }

    CoulombCollisionModel           none;

}

// ParticleMerging
// ~~~~~~~~~~~~~~~~~~~~~
ParticleMerging             none;

// ************************************************************************* //
